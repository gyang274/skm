% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/skm.r
\name{skm_mls}
\alias{skm_mls}
\title{skm_mls: selective k-means solver - wrapper over skm_mls_cpp
a selective kmeans solve the following problem w. parallel processing:
assume a data.table of s - t - d(s, t) for all combinations of s and t,
choose k of s that minimizes sum(min(d(s, t))) with k such s and all t.}
\usage{
skm_mls(x, k = 1L, s_colname = "s", t_colname = "t", d_colname = "d",
  w_colname = NULL, s_ggrp = integer(0L), s_must = integer(0L),
  max_it = 100L, max_at = 100L, auto_create_ggrp = TRUE,
  extra_immaculatism = TRUE, extra_at = 10L)
}
\arguments{
\item{x:}{data.table with s - t - d(s, t): s<source> - t<target> - d<dist>,
where s<source> and t<target> must characters and d<distance> must numeric.
aware d<distance> is not necessary as an euclidean or any distance and even
necessary as symmetric - d(s, t) can be unequal to d(t, s) - view d as such
a measure of the cost of assigning one to the other!}

\item{k:}{number of centers}

\item{s_colname:}{s<source>}

\item{t_colname:}{t<target>}

\item{d_colname:}{d<distance> - view d as cost of assigning t into s.
also modify the input data or build in the algorithm can solve problem with
a different fixed cost on using each s as source - i prefer to moddify data
so that the algorithm is clean and clear - i will show a how to in vignette}

\item{w_colname:}{w<weighting> - optional: when none null optimizing toward
objective to minimize d = d * w such as weighted cost of assigning t into s}

\item{s_must:}{length <= k-1 s must in result: conditional optimizing.}

\item{s_ggrp:}{s_init will be stratified sampling from s w.r.t s_ggrp.}

\item{max_it:}{max number of iterations can run for optimizing result.}

\item{max_at:}{max number of attempts/repeats on running for optimial.}

\item{goParallel:}{use parallel verison skm<Rpl>_mlp_cpp() solver or not.}

\item{skmRpl_GS:}{set gain size of parallel run ignore if not goParallel.
TODO: add min_at: min number of attempts/repeats on running for optimial,
also add halt_at: number attempts before stop if no improve after min_at.}
}
\value{
data.table with:
o - objective - based on d_colname
w - weighting - based on w_colname
k - k<k-list> - based on k - input
s - s<source> - based on s_colname
d - weighed averge value of d_colname weighed by w_column when s are selected.
}
\description{
skm_mls: selective k-means solver - wrapper over skm_mls_cpp
a selective kmeans solve the following problem w. parallel processing:
assume a data.table of s - t - d(s, t) for all combinations of s and t,
choose k of s that minimizes sum(min(d(s, t))) with k such s and all t.
}

