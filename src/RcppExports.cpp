// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dist_wlatlng_mi_cpp
double dist_wlatlng_mi_cpp(double lat1, double lng1, double lat2, double lng2);
RcppExport SEXP skm_dist_wlatlng_mi_cpp(SEXP lat1SEXP, SEXP lng1SEXP, SEXP lat2SEXP, SEXP lng2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< double >::type lng1(lng1SEXP);
    Rcpp::traits::input_parameter< double >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< double >::type lng2(lng2SEXP);
    rcpp_result_gen = Rcpp::wrap(dist_wlatlng_mi_cpp(lat1, lng1, lat2, lng2));
    return rcpp_result_gen;
END_RCPP
}
// dist_wlatlng_km_cpp
double dist_wlatlng_km_cpp(double lat1, double lng1, double lat2, double lng2);
RcppExport SEXP skm_dist_wlatlng_km_cpp(SEXP lat1SEXP, SEXP lng1SEXP, SEXP lat2SEXP, SEXP lng2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< double >::type lng1(lng1SEXP);
    Rcpp::traits::input_parameter< double >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< double >::type lng2(lng2SEXP);
    rcpp_result_gen = Rcpp::wrap(dist_wlatlng_km_cpp(lat1, lng1, lat2, lng2));
    return rcpp_result_gen;
END_RCPP
}
// distSgl_wlatlng_cpp
arma::vec distSgl_wlatlng_cpp(arma::vec lat1, arma::vec lng1, arma::vec lat2, arma::vec lng2, std::string measure);
RcppExport SEXP skm_distSgl_wlatlng_cpp(SEXP lat1SEXP, SEXP lng1SEXP, SEXP lat2SEXP, SEXP lng2SEXP, SEXP measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lng1(lng1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lng2(lng2SEXP);
    Rcpp::traits::input_parameter< std::string >::type measure(measureSEXP);
    rcpp_result_gen = Rcpp::wrap(distSgl_wlatlng_cpp(lat1, lng1, lat2, lng2, measure));
    return rcpp_result_gen;
END_RCPP
}
// distRpl_wlatlng_cpp
NumericVector distRpl_wlatlng_cpp(NumericVector lat1, NumericVector lng1, NumericVector lat2, NumericVector lng2, std::string measure, int distRpl_GS);
RcppExport SEXP skm_distRpl_wlatlng_cpp(SEXP lat1SEXP, SEXP lng1SEXP, SEXP lat2SEXP, SEXP lng2SEXP, SEXP measureSEXP, SEXP distRpl_GSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lng1(lng1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lng2(lng2SEXP);
    Rcpp::traits::input_parameter< std::string >::type measure(measureSEXP);
    Rcpp::traits::input_parameter< int >::type distRpl_GS(distRpl_GSSEXP);
    rcpp_result_gen = Rcpp::wrap(distRpl_wlatlng_cpp(lat1, lng1, lat2, lng2, measure, distRpl_GS));
    return rcpp_result_gen;
END_RCPP
}
// col_min_idx
arma::uword col_min_idx(const arma::colvec& u, const arma::ucolvec& wlmt);
RcppExport SEXP skm_col_min_idx(SEXP uSEXP, SEXP wlmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::ucolvec& >::type wlmt(wlmtSEXP);
    rcpp_result_gen = Rcpp::wrap(col_min_idx(u, wlmt));
    return rcpp_result_gen;
END_RCPP
}
// col_max_idx
arma::uword col_max_idx(const arma::colvec& u, const arma::ucolvec& wlmt);
RcppExport SEXP skm_col_max_idx(SEXP uSEXP, SEXP wlmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::ucolvec& >::type wlmt(wlmtSEXP);
    rcpp_result_gen = Rcpp::wrap(col_max_idx(u, wlmt));
    return rcpp_result_gen;
END_RCPP
}
// col_min_val
double col_min_val(const arma::colvec& u, const arma::ucolvec& wlmt);
RcppExport SEXP skm_col_min_val(SEXP uSEXP, SEXP wlmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::ucolvec& >::type wlmt(wlmtSEXP);
    rcpp_result_gen = Rcpp::wrap(col_min_val(u, wlmt));
    return rcpp_result_gen;
END_RCPP
}
// col_max_val
double col_max_val(const arma::colvec& u, const arma::ucolvec& wlmt);
RcppExport SEXP skm_col_max_val(SEXP uSEXP, SEXP wlmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::ucolvec& >::type wlmt(wlmtSEXP);
    rcpp_result_gen = Rcpp::wrap(col_max_val(u, wlmt));
    return rcpp_result_gen;
END_RCPP
}
// col_rgn_val
double col_rgn_val(const arma::colvec& u, const arma::ucolvec& wlmt);
RcppExport SEXP skm_col_rgn_val(SEXP uSEXP, SEXP wlmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::ucolvec& >::type wlmt(wlmtSEXP);
    rcpp_result_gen = Rcpp::wrap(col_rgn_val(u, wlmt));
    return rcpp_result_gen;
END_RCPP
}
// stratified_sampling
arma::uvec stratified_sampling(const arma::uvec& v, const arma::uword k, const arma::uvec& g);
RcppExport SEXP skm_stratified_sampling(SEXP vSEXP, SEXP kSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uvec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type g(gSEXP);
    rcpp_result_gen = Rcpp::wrap(stratified_sampling(v, k, g));
    return rcpp_result_gen;
END_RCPP
}
// skm_mlp_cpp
Rcpp::List skm_mlp_cpp(const arma::mat& x, const arma::uword k, const arma::uvec& s_must, const arma::uword max_it, const arma::uword max_at);
RcppExport SEXP skm_skm_mlp_cpp(SEXP xSEXP, SEXP kSEXP, SEXP s_mustSEXP, SEXP max_itSEXP, SEXP max_atSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type s_must(s_mustSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type max_at(max_atSEXP);
    rcpp_result_gen = Rcpp::wrap(skm_mlp_cpp(x, k, s_must, max_it, max_at));
    return rcpp_result_gen;
END_RCPP
}
// skm_mls_cpp
Rcpp::List skm_mls_cpp(const arma::mat& x, const arma::uword k, const arma::uvec g, const arma::uvec& s_must, const arma::uword max_it, const arma::uword max_at);
RcppExport SEXP skm_skm_mls_cpp(SEXP xSEXP, SEXP kSEXP, SEXP gSEXP, SEXP s_mustSEXP, SEXP max_itSEXP, SEXP max_atSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type s_must(s_mustSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type max_at(max_atSEXP);
    rcpp_result_gen = Rcpp::wrap(skm_mls_cpp(x, k, g, s_must, max_it, max_at));
    return rcpp_result_gen;
END_RCPP
}
// skmRpl_mlp_cpp
Rcpp::List skmRpl_mlp_cpp(const NumericMatrix x, const unsigned int k, const IntegerVector s_must, const unsigned int max_it, const unsigned int max_at, const unsigned int skmRpl_GS);
RcppExport SEXP skm_skmRpl_mlp_cpp(SEXP xSEXP, SEXP kSEXP, SEXP s_mustSEXP, SEXP max_itSEXP, SEXP max_atSEXP, SEXP skmRpl_GSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type s_must(s_mustSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type max_at(max_atSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type skmRpl_GS(skmRpl_GSSEXP);
    rcpp_result_gen = Rcpp::wrap(skmRpl_mlp_cpp(x, k, s_must, max_it, max_at, skmRpl_GS));
    return rcpp_result_gen;
END_RCPP
}
// skm_gdp_cpp
arma::uvec skm_gdp_cpp(arma::mat x, arma::uword k);
RcppExport SEXP skm_skm_gdp_cpp(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(skm_gdp_cpp(x, k));
    return rcpp_result_gen;
END_RCPP
}
